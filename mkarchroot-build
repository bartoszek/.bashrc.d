#!/bin/bash
while true; do
  case "$1" in
    --dev)
      # override stock pacman.with.pacman-git
      _dev_pacman=1
      shift;;
    --date=*)
      _repo_date=${1#*=}
      shift;;
    *)
      break;;
  esac
done

# Test if _repo_date resolve to correct archlinux archive url.
[ -v _repo_date ] && {
  if curl -s https://archive.archlinux.org/repos/"${_repo_date}"/|hq head text|grep -q 404
  then
    echo "Error: --date=${_repo_date} format should be yyyy/mm/dd"
    exit 1
  else
    _mirror_url="https://archive.archlinux.org/repos/${_repo_date}/"
  fi
}

nspawn="arch-nspawn /tmp/root --bind-ro=/home/_pacman_cache/ --bind=/home/_ccache:/home/user/.ccache --bind=$(pwd):/build/$(basename "$PWD")"
[ -d /tmp/root ] || {
  mkarchroot /tmp/root base-devel
# Installing pacman-git requires reapplying pacman.conf modification.
  $nspawn bash -xec 'echo -e "[aur]\nSigLevel = Optional TrustAll\nServer = file:///home/_pacman_cache/aur" >> /etc/pacman.conf'
  ((_dev_pacman)) && $nspawn bash -xec 'pacman -S --noconfirm --ask=4 pacman-git'
  ((_dev_pacman)) && $nspawn bash -xec 'echo -e "[aur]\nSigLevel = Optional TrustAll\nServer = file:///home/_pacman_cache/aur" >> /etc/pacman.conf'
# Configure chroot
  $nspawn bash -xec 'useradd user'
  $nspawn bash -xec 'echo "user ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers'
  $nspawn bash -xec 'echo MAKEFLAGS="-j8" >> /etc/makepkg.conf'
  $nspawn bash -xec 'sed -i "s/tar\.xz/tar\.zst/" /etc/makepkg.conf'
  $nspawn bash -xec 'pacman -Sy'
  $nspawn bash -xec 'pacman -S --noconfirm vim moreutils man git makepkg-optimize'
  ((_dev_pacman)) && $nspawn bash -xec 'pacman -S --noconfirm pyalpm-git aur/namcap'
# Configure user
# $nspawn bash -xec 'mkdir /home/user'
  $nspawn bash -xec 'chown -R user:user /home/user'
  $nspawn bash -xec 'chpasswd <<<"user:user" '
  $nspawn --user=user bash -xvec "echo \"cd /build/$(basename "$PWD")\" >> ~/.bashrc"
}
# Run bash or command form cli
(($#)) && $nspawn --user=user bash -xvec "cd /build/$(basename "$PWD"); $*; bash"
(($#)) || $nspawn --user=user bash

